{"version":3,"sources":["../../src/api/transactionSubmission/simulate.ts"],"sourcesContent":["// Copyright Â© Aptos Foundation\n// SPDX-License-Identifier: Apache-2.0\n\nimport { PublicKey } from \"../../core\";\nimport { simulateTransaction } from \"../../internal/transactionSubmission\";\nimport { AnyRawTransaction, InputSimulateTransactionOptions } from \"../../transactions\";\nimport { UserTransactionResponse } from \"../../types\";\nimport { AptosConfig } from \"../aptosConfig\";\n\n/**\n * A class to handle all `Simulate` transaction operations\n */\nexport class Simulate {\n  readonly config: AptosConfig;\n\n  constructor(config: AptosConfig) {\n    this.config = config;\n  }\n\n  @ValidateFeePayerData\n  async transaction(args: {\n    signerPublicKey: PublicKey;\n    transaction: AnyRawTransaction;\n    feePayerPublicKey?: PublicKey;\n    options?: InputSimulateTransactionOptions;\n  }): Promise<Array<UserTransactionResponse>> {\n    return simulateTransaction({ aptosConfig: this.config, ...args });\n  }\n\n  @ValidateFeePayerData\n  async multiAgentTransaction(args: {\n    signerPublicKey: PublicKey;\n    transaction: AnyRawTransaction;\n    secondarySignersPublicKeys: Array<PublicKey>;\n    feePayerPublicKey?: PublicKey;\n    options?: InputSimulateTransactionOptions;\n  }): Promise<Array<UserTransactionResponse>> {\n    return simulateTransaction({ aptosConfig: this.config, ...args });\n  }\n}\n\nfunction ValidateFeePayerData(target: unknown, propertyKey: string, descriptor: PropertyDescriptor) {\n  const originalMethod = descriptor.value;\n  /* eslint-disable-next-line func-names, no-param-reassign */\n  descriptor.value = async function (...args: any[]) {\n    const [methodArgs] = args;\n\n    if (methodArgs.transaction.feePayerAddress && !methodArgs.feePayerPublicKey) {\n      throw new Error(\"You are simulating a Fee Payer transaction but missing the feePayerPublicKey\");\n    }\n\n    return originalMethod.apply(this, args);\n  };\n\n  return descriptor;\n}\n"],"mappings":"kFAYO,IAAMA,EAAN,KAAe,CAGpB,YAAYC,EAAqB,CAC/B,KAAK,OAASA,CAChB,CAGA,MAAM,YAAYC,EAK0B,CAC1C,OAAOC,EAAoB,CAAE,YAAa,KAAK,OAAQ,GAAGD,CAAK,CAAC,CAClE,CAGA,MAAM,sBAAsBA,EAMgB,CAC1C,OAAOC,EAAoB,CAAE,YAAa,KAAK,OAAQ,GAAGD,CAAK,CAAC,CAClE,CACF,EAnBQE,EAAA,CADLC,GAPUL,EAQL,2BAUAI,EAAA,CADLC,GAjBUL,EAkBL,qCAWR,SAASK,EAAqBC,EAAiBC,EAAqBC,EAAgC,CAClG,IAAMC,EAAiBD,EAAW,MAElC,OAAAA,EAAW,MAAQ,kBAAmBN,EAAa,CACjD,GAAM,CAACQ,CAAU,EAAIR,EAErB,GAAIQ,EAAW,YAAY,iBAAmB,CAACA,EAAW,kBACxD,MAAM,IAAI,MAAM,8EAA8E,EAGhG,OAAOD,EAAe,MAAM,KAAMP,CAAI,CACxC,EAEOM,CACT","names":["Simulate","config","args","simulateTransaction","__decorateClass","ValidateFeePayerData","target","propertyKey","descriptor","originalMethod","methodArgs"]}