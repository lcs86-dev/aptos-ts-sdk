import{a as u}from"./chunk-NBTMPC7J.mjs";import{b as w}from"./chunk-72XSCUWL.mjs";import{e as g,g as A}from"./chunk-BIRTH26D.mjs";import{t as f}from"./chunk-BQSE5HHW.mjs";var E=["A name must be between 3 and 63 characters long,","and can only contain lowercase a-z, 0-9, and hyphens.","A name may not start or end with a hyphen."].join(" ");function D(n){return!(!n||n.length<3||n.length>63||!/^[a-z\d][a-z\d-]{1,61}[a-z\d]$/.test(n))}function c(n){let[e,t,...o]=n.replace(/\.apt$/,"").split(".");if(o.length>0)throw new Error(`${n} is invalid. A name can only have two parts, a domain and a subdomain separated by a "."`);if(!D(e))throw new Error(`${e} is not valid. ${E}`);if(t&&!D(t))throw new Error(`${t} is not valid. ${E}`);return{domainName:t||e,subdomainName:t?e:void 0}}var Y="0x37368b46ce665362562c6d1d4ec01a08c8644c488690df5a17e13ba163e20221",G="0x585fc9f0f0c54183b039ffc770ca282ebd87307916c215a3e692f2f8e4305e82",P={testnet:"0x5f8fd2347449685cf41d4db97926ec3a096eaf381332be4f1318ad4d16a8497c",mainnet:"0x867ed1f6bf916171b1de3ee92849b8978b7d1b9e0a8cc982a3d19d535dfd9c0c",local:G,custom:null,devnet:null};function d(n){let e=P[n.network];if(!e)throw new Error(`The ANS contract is not deployed to ${n.network}`);return e}var I=n=>({vec:[n]}),O=()=>({vec:[]}),_=n=>n!=null?I(n):O(),S=n=>{if(n&&typeof n=="object"&&"vec"in n&&Array.isArray(n.vec))return n.vec[0]};async function K(n){let{aptosConfig:e,name:t}=n,o=d(e),{domainName:r,subdomainName:a}=c(t),s=await g({aptosConfig:e,payload:{function:`${o}::router::get_owner_addr`,functionArguments:[r,_(a)]}}),i=S(s[0]);return i?w.fromRelaxed(i).toString():void 0}async function F(n){let{aptosConfig:e,expiration:t,name:o,sender:r,targetAddress:a,toAddress:s,options:i,transferable:m}=n,p=d(e),{domainName:y,subdomainName:N}=c(o),x=t.policy==="subdomain:independent"||t.policy==="subdomain:follow-domain";if(N&&!x)throw new Error("Subdomains must have an expiration policy of either 'subdomain:independent' or 'subdomain:follow-domain'");if(x&&!N)throw new Error(`Policy is set to ${t.policy} but no subdomain was provided`);if(t.policy==="domain"){let h=t.years??1;if(h!==1)throw new Error("For now, names can only be registered for 1 year at a time");let v=h*31536e3;return await u({aptosConfig:e,sender:r.accountAddress.toString(),data:{function:`${p}::router::register_domain`,functionArguments:[y,v,a,s]},options:i})}if(!N)throw new Error(`${t.policy} requires a subdomain to be provided.`);let b=await R({aptosConfig:e,name:y});if(!b)throw new Error("The domain does not exist");let T=t.policy==="subdomain:independent"?t.expirationDate:b;if(T>b)throw new Error("The subdomain expiration time cannot be greater than the domain expiration time");return await u({aptosConfig:e,sender:r.accountAddress.toString(),data:{function:`${p}::router::register_subdomain`,functionArguments:[y,N,Math.round(T/1e3),t.policy==="subdomain:follow-domain"?1:0,!!m,a,s]},options:i})}async function R(n){let{aptosConfig:e,name:t}=n,o=d(e),{domainName:r,subdomainName:a}=c(t);try{let s=await g({aptosConfig:e,payload:{function:`${o}::router::get_expiration`,functionArguments:[r,_(a)]}});return Number(s[0])*1e3}catch{return}}async function H(n){let{aptosConfig:e,address:t}=n,o=d(e),r=await g({aptosConfig:e,payload:{function:`${o}::router::get_primary_name`,functionArguments:[w.fromRelaxed(t).toString()]}}),a=S(r[1]),s=S(r[0]);if(a)return[s,a].filter(Boolean).join(".")}async function J(n){let{aptosConfig:e,sender:t,name:o,options:r}=n,a=d(e);if(!o)return await u({aptosConfig:e,sender:t.accountAddress.toString(),data:{function:`${a}::router::clear_primary_name`,functionArguments:[]},options:r});let{domainName:s,subdomainName:i}=c(o);return await u({aptosConfig:e,sender:t.accountAddress.toString(),data:{function:`${a}::router::set_primary_name`,functionArguments:[s,i]},options:r})}async function W(n){let{aptosConfig:e,name:t}=n,o=d(e),{domainName:r,subdomainName:a}=c(t),s=await g({aptosConfig:e,payload:{function:`${o}::router::get_target_addr`,functionArguments:[r,_(a)]}}),i=S(s[0]);return i?w.fromRelaxed(i).toString():void 0}async function X(n){let{aptosConfig:e,sender:t,name:o,address:r,options:a}=n,s=d(e),{domainName:i,subdomainName:m}=c(o);return await u({aptosConfig:e,sender:t.accountAddress.toString(),data:{function:`${s}::router::set_target_addr`,functionArguments:[i,m,r]},options:a})}async function Z(n){let{aptosConfig:e,name:t}=n,{domainName:o,subdomainName:r=""}=c(t),i=(await A({aptosConfig:e,query:{query:f,variables:{where_condition:{domain:{_eq:o},subdomain:{_eq:r}},limit:1}},originMethod:"getName"})).current_aptos_names[0];return i&&(i=l(i)),i}async function nn(n){let{aptosConfig:e,options:t,accountAddress:o}=n,r=await C({aptosConfig:e});return(await A({aptosConfig:e,originMethod:"getAccountNames",query:{query:f,variables:{limit:t?.pagination?.limit,offset:t?.pagination?.offset,order_by:t?.orderBy,where_condition:{...n.options?.where??{},owner_address:{_eq:o.toString()},expiration_timestamp:{_gte:r}}}}})).current_aptos_names.map(l)}async function en(n){let{aptosConfig:e,options:t,accountAddress:o}=n,r=await C({aptosConfig:e});return(await A({aptosConfig:e,originMethod:"getAccountDomains",query:{query:f,variables:{limit:t?.pagination?.limit,offset:t?.pagination?.offset,order_by:t?.orderBy,where_condition:{...n.options?.where??{},owner_address:{_eq:o.toString()},expiration_timestamp:{_gte:r},subdomain:{_eq:""}}}}})).current_aptos_names.map(l)}async function tn(n){let{aptosConfig:e,options:t,accountAddress:o}=n,r=await C({aptosConfig:e});return(await A({aptosConfig:e,originMethod:"getAccountSubdomains",query:{query:f,variables:{limit:t?.pagination?.limit,offset:t?.pagination?.offset,order_by:t?.orderBy,where_condition:{...n.options?.where??{},owner_address:{_eq:o.toString()},expiration_timestamp:{_gte:r},subdomain:{_neq:""}}}}})).current_aptos_names.map(l)}async function on(n){let{aptosConfig:e,options:t,domain:o}=n;return(await A({aptosConfig:e,originMethod:"getDomainSubdomains",query:{query:f,variables:{limit:t?.pagination?.limit,offset:t?.pagination?.offset,order_by:t?.orderBy,where_condition:{...n.options?.where??{},domain:{_eq:o},subdomain:{_neq:""}}}}})).current_aptos_names.map(l)}async function C(n){let{aptosConfig:e}=n,t=d(e),a=(await g({aptosConfig:e,payload:{function:`${t}::config::reregistration_grace_sec`,functionArguments:[]}}))[0]/60/60/24,s=()=>new Date;return new Date(s().setDate(s().getDate()-a)).toISOString()}async function rn(n){let{aptosConfig:e,sender:t,name:o,years:r=1,options:a}=n,s=d(e),i=r*31536e3,{domainName:m,subdomainName:p}=c(o);if(p)throw new Error("Subdomains cannot be renewed");if(r!==1)throw new Error("Currently, only 1 year renewals are supported");return await u({aptosConfig:e,sender:t.accountAddress.toString(),data:{function:`${s}::router::renew_domain`,functionArguments:[m,i]},options:a})}function l(n){return{...n,expiration_timestamp:new Date(n.expiration_timestamp).valueOf()}}export{E as a,D as b,c,Y as d,G as e,K as f,F as g,R as h,H as i,J as j,W as k,X as l,Z as m,nn as n,en as o,tn as p,on as q,rn as r};
//# sourceMappingURL=chunk-VNSL53Q6.mjs.map